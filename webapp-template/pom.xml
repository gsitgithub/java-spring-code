<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
           http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
	<parent>
       <groupId>dev.gsitgithub</groupId>
       <artifactId>parent-pom</artifactId>
       <version>0.0.1-SNAPSHOT</version>
    </parent>
  
    <groupId>dev.gsitgithub</groupId>
    <artifactId>webapp-template</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>Prof Java Webapp</name>
    <description>Example exercise. Application description...</description>
    <url>https://github.com/gsitgithub/prof-java-webapp</url>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <url>https://github.com/gsitgithub/prof-java-webapp</url>
        <connection>scm:git:git://github.com/gsitgithub/prof-java-webapp.git</connection>
        <developerConnection>scm:git:git@github.com:gsitgithub/prof-java-webapp.git</developerConnection>
    </scm>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/gsitgithub/prof-java-webapp/issues</url>
    </issueManagement>

    <organization>
        <name>Developers Area</name>
        <url>https://github.com/gsitgithub</url>
    </organization>

    <developers>
        <developer>
            <id>gsitgithub</id>
            <name>Gsit Developer</name>
            <email>gsitgithub@gmail.com</email>
            <roles>
                <role>author</role>
                <role>architect</role>
                <role>developer</role>
            </roles>
            <organization>https://github.com/gsitgithub</organization>
        </developer>
    </developers>

    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <property>
                    <name>!application.environment</name>
                </property>
            </activation>
            <properties>
                <application.environment>localhost</application.environment>
            </properties>
        </profile>
        <profile>
            <id>localhost</id>
            <activation>
                <property>
                    <name>application.environment</name>
                    <value>localhost</value>
                </property>
            </activation>
        </profile>
        <profile>
            <id>development</id>
            <activation>
                <property>
                    <name>application.environment</name>
                    <value>development</value>
                </property>
            </activation>
        </profile>
        <profile>
            <id>test</id>
            <activation>
                <property>
                    <name>application.environment</name>
                    <value>test</value>
                </property>
            </activation>
        </profile>
        <profile>
            <id>production</id>
            <activation>
                <property>
                    <name>application.environment</name>
                    <value>production</value>
                </property>
            </activation>
        </profile>
    </profiles>

    <prerequisites>
        <maven>3.1.1</maven>
    </prerequisites>

    <properties>
        <!-- Build Properties -->
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
        <timestamp>${maven.build.timestamp}</timestamp>
        <!-- WORKAROUND: Make maven.build.timestamp property available in resource filtering, see http://jira.codehaus.org/browse/MRESOURCES-99 -->

        <!-- Skip artifact deployment, to work it, add inside an active profile-->
        <maven.deploy.skip>true</maven.deploy.skip>
    </properties>

    <dependencies>
    	<dependency>
		    <groupId>javax.inject</groupId>
		    <artifactId>javax.inject</artifactId>
		</dependency>
        <dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>2.3.3</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp.jstl</groupId>
			<artifactId>javax.servlet.jsp.jstl-api</artifactId>
			<version>1.2.2</version>
		</dependency>

        <!-- Javax Servlet -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Spring  Dependencies Start-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>

        <!-- Spring Aspects -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- Spring Data JPA -->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
        </dependency>

        <!-- Spring Security -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
        </dependency>
        <!-- Spring  Dependencies End-->

        <!-- Converters Start -->
        <!-- Jackson Jaxrs -->
        <!--<dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-jaxrs</artifactId>
        </dependency>-->

        <!-- Gson -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>
        <!-- Converters end -->

        <!-- Utilities Dependencies Start-->
        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <type>jar</type>
        </dependency>

        <!-- Guava -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <!-- Apache Commons Lang -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <!-- Lambdaj -->
        <dependency>
            <groupId>com.googlecode.lambdaj</groupId>
            <artifactId>lambdaj</artifactId>
            <exclusions>
                <!-- Exclude old version of hamcrest -->
                <exclusion>
                    <artifactId>hamcrest-all</artifactId>
                    <groupId>org.hamcrest</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Utilities Dependencies End-->

        <!-- Database Dependencies Start-->
        <!-- MySQL -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <!-- H2 DB -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
		<!--    Java-8 -->
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- Hibernate -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
        </dependency>

        <!-- Hibernate Envers -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-envers</artifactId>
        </dependency>

        <!-- Hibernate Validator -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>

        <!-- QueryDSL: apt-maven-plugin for classes generation at compilation. 
        https://www.petrikainulainen.net/programming/spring-framework/spring-data-jpa-tutorial-part-five-querydsl/ -->
        <!-- <dependency> 
		    <groupId>com.querydsl</groupId> 
		    <artifactId>querydsl-apt</artifactId> 
	    </dependency>
    	<dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-jpa</artifactId>
        </dependency>
        <dependency>
		   <groupId>com.infobip</groupId>
		   <artifactId>infobip-spring-data-jpa-querydsl</artifactId>
		</dependency> -->

        <!-- Jadira Usertype (Integrates Joda Time and Joda Money with Hibernate) -->
        <!-- <dependency>
            <groupId>org.jadira.usertype</groupId>
            <artifactId>usertype.core</artifactId>
        </dependency> -->
        <!-- Joda Time and Money -->
        <!-- <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>
        <dependency>
            <groupId>org.joda</groupId>
            <artifactId>joda-money</artifactId>
        </dependency> -->

        <!-- Database Dependencies End -->

        <!-- Logging Dependencies Start-->
        <!-- Using Slf4J Api -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <!-- Logback Only start -->
        <!--<dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-access</artifactId>
            <scope>provided</scope>
        </dependency>-->
        <!-- Logback Only END -->

        <!-- Log4j2 Only Start -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jcl</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!--<dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
        </dependency>-->
        <!--    for Log4j2.0 API
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-taglib</artifactId>
            <scope>runtime</scope>
        </dependency>-->
        <!-- Log4j2 Only END -->

        <!-- Logging Dependencies End-->

        <!-- Test Dependencies Start-->
        <!-- JUnit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Mockito -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Hamcrest -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Fest -->
        <dependency>
            <groupId>org.easytesting</groupId>
            <artifactId>fest-assert-core</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Java Melody Monitoring -->
        <dependency>
            <groupId>net.bull.javamelody</groupId>
            <artifactId>javamelody-core</artifactId>
        </dependency>

        <!-- JMiniX -->
        <dependency>
            <groupId>org.jminix</groupId>
            <artifactId>jminix</artifactId>
        </dependency>
        <!-- Test Dependencies End-->
    </dependencies>

    <build>
        <!-- Save Application Build Information -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>application_*.properties</include>
                </includes>
            </resource>
        </resources>

        <plugins>
            <!-- Set Java Version -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler.plugin.version}</version>
                <configuration>
                    <source>${project.build.sourceJavaVersion}</source>
                    <target>${project.build.targetJavaVersion}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <showDeprecation>true</showDeprecation>
                    <optimize>true</optimize>
                </configuration>
            </plugin>

            <!-- Clean Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${clean.plugin.version}</version>
            </plugin>

            <!-- Install Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>${install.plugin.version}</version>
            </plugin>

            <!-- War Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${war.plugin.version}</version>
                <configuration>
                    <!-- Use Servlet Java Config instead of XML -->
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>

            <!-- Resources Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${resources.plugin.version}</version>
            </plugin>

            <!-- Deploy Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${deploy.plugin.version}</version>
            </plugin>

            <!-- Release Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${release.plugin.version}</version>
            </plugin>

            <!-- Generate QueryDSL Help Classes -->
            <!-- <plugin>
                <groupId>com.mysema.maven</groupId>
                <artifactId>apt-maven-plugin</artifactId>
                <version>${apt.plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>com.querydsl</groupId>
                        <artifactId>querydsl-apt</artifactId>
                        <version>${querydsl.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/generated-sources/java</outputDirectory>
                            <processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
                            <options>
                                <querydsl.excludedPackages>dev.gsitgithub.webapp.config
                                </querydsl.excludedPackages>
                            </options>
                        </configuration>
                    </execution>
                </executions>
            </plugin> -->

            <!-- Run Unit Tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.plugin.version}</version>
                <configuration>
                    <parallel>methods</parallel>
                    <threadCount>10</threadCount>
                    <!-- Uncomment to skip tests -->
                    <!--<skipTests>true</skipTests>-->
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                </configuration>
            </plugin>

            <!-- Checkstyle -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${checkstyle.plugin.version}</version>
                <configuration>
                    <configLocation>${basedir}/src/test/resources/checkstyle.xml</configLocation>
                    <failOnViolation>false</failOnViolation>
                    <consoleOutput>true</consoleOutput>
                    <suppressionsLocation>${basedir}/src/test/resources/suppressions.xml</suppressionsLocation>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                </configuration>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Enforce Java Version -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${enforcer.plugin.version}</version>
                <executions>
                    <execution>
                        <id>enforce-banned-dependencies</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>${project.build.targetJavaVersion}</version>
                                </requireJavaVersion>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Versions Plugin -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${versions.plugin.version}</version>
            </plugin>

            <!-- Help Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-help-plugin</artifactId>
                <version>${help.plugin.version}</version>
            </plugin>

            <!-- Set System Properties -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>${properties.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>set-system-properties</goal>
                        </goals>
                        <configuration>
                            <properties>
                                <property>
                                    <name>application.environment</name>
                                    <value>${application.environment}</value>
                                </property>

                                <property>
                                    <name>logback.configurationFile</name>
                                    <value>src/main/resources/logback.xml</value>
                                </property>
                            </properties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Embedded Tomcat Server -->
            <!-- Start command: mvn tomcat7:run -->
            <!-- Available at:  http://localhost:8080/application-name -->
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>${tomcat7.plugin.version}</version>
                <configuration>
                    <path>/${project.build.finalName}</path>
                    <port>8080</port>
                    <charset>UTF-8</charset>
                    <uriEncoding>UTF-8</uriEncoding>
                    <httpsPort>8443</httpsPort>
                    <keystoreFile>${basedir}/src/test/resources/keystore</keystoreFile>
                    <keystorePass>changeme</keystorePass>
                </configuration>
                <dependencies>
                    <!-- Logback Access -->
                    <dependency>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-access</artifactId>
                        <version>${logback.version}</version>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- Embedded Jetty Server -->
            <!-- Start command: mvn jetty:run -->
            <!-- Available at:  http://localhost:8080/application-name -->
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.plugin.version}</version>
                <configuration>
                    <jettyXml>
                        src/test/resources/jetty.xml,src/test/resources/jetty-http.xml,src/test/resources/jetty-ssl.xml,src/test/resources/jetty-https.xml
                    </jettyXml>
                    <webAppConfig>
                        <contextPath>/${project.artifactId}</contextPath>
                    </webAppConfig>
                    <stopPort>18080</stopPort>
                    <stopKey>stop-jetty</stopKey>
                    <scanIntervalSeconds>1</scanIntervalSeconds>
                    <requestLog implementation="ch.qos.logback.access.jetty.RequestLogImpl">
                        <fileName>src/main/resources/logback-access.xml</fileName>
                        <quiet>true</quiet>
                    </requestLog>
                </configuration>
                <dependencies>
                    <!-- Logback Access -->
                    <dependency>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-access</artifactId>
                        <version>${logback.version}</version>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>

        <finalName>pjava</finalName>
        <!--<finalName>${project.artifactId}</finalName>-->
    </build>

    <repositories>
        <!-- Spring Releases -->
        <repository>
            <id>spring.release</id>
            <name>Spring Release Repository</name>
            <url>http://repo.spring.io/release</url>
        </repository>

        <!-- Nexus Snapshots -->
        <repository>
            <id>sonatype-nexus</id>
            <name>Sonatype Nexus Releases and Snapshots</name>
            <url>https://oss.sonatype.org/content/groups/public</url>
        </repository>

        <!-- Lombok -->
        <repository>
            <id>lombok</id>
            <url>http://projectlombok.org/mavenrepo</url>
        </repository>

        <!-- JMiniX -->
        <repository>
            <id>restlet</id>
            <url>http://maven.restlet.org</url>
        </repository>
    </repositories>
</project>