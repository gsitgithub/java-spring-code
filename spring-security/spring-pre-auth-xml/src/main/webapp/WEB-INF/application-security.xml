<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">
	
	<global-method-security pre-post-annotations="enabled">
		<!-- <protect-pointcut expression="execution(* com.howtodoinjava.service.*Impl.add*(..))" access="ROLE_USER"/>
		<protect-pointcut expression="execution(* com.howtodoinjava.service.*Impl.delete*(..))" access="ROLE_ADMIN"/> -->
	</global-method-security>
	
	<beans:bean id="authenticationEntryPoint" 
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint" >
		<beans:constructor-arg name="loginFormUrl" value="/accessdenied" />
	</beans:bean>
	
	<http auto-config="false"  use-expressions="true" entry-point-ref="authenticationEntryPoint">
		<intercept-url pattern="/accessdenied" access="permitAll" />
		<!-- <intercept-url pattern="/login" access="permitAll" />
		<form-login login-page="/login" default-target-url="/list" authentication-failure-url="/accessdenied" /> -->
		<intercept-url pattern="/**" access="isAuthenticated()" />
		<logout logout-url="/logout" logout-success-url="/accessdenied" invalidate-session="true" delete-cookies="true"/>
		<custom-filter position="PRE_AUTH_FILTER" ref="preAuthFilter" />
		<!-- enable csrf protection -->
		<!-- <csrf /> -->
	</http>
	
    <beans:bean id="customUserDetailsService" class="CustomUserDetailsService" />
	<authentication-manager alias="authenticationManager">
        <!-- <authentication-provider user-service-ref="customUserDetailsService"/> -->
    </authentication-manager>
    
     <beans:bean id="preAuthFilter" class="CustomPreAuthenticatedProcessingFilter">
        <beans:property name="principalRequestHeader" value="LAB_SOLUTIONS"/>
        <beans:property name="authenticationManager" ref="preAuthenticationManager" />
    </beans:bean>
	<authentication-manager alias="preAuthenticationManager">
		<authentication-provider ref="preauthAuthProvider" />
	</authentication-manager>
    <beans:bean id="preauthAuthProvider" class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
        <beans:property name="preAuthenticatedUserDetailsService" ref="customFilterDetailsService">
            <!-- <beans:bean id="userDetailsServiceWrapper"  class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
                <beans:property name="userDetailsService" ref="customFilterDetailsService"/>
            </beans:bean> -->
        </beans:property>
    </beans:bean>
    <beans:bean id="customFilterDetailsService" class="CustomFilterDetailsService" />
    
    <!-- <beans:bean id="customAuthenticationEntryPoint" class="CustomAuthenticationEntryPoint" />
    <beans:bean id="customAuthenticationProvider" class="CustomAuthenticationProvider" /> -->
    
</beans:beans>